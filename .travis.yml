language: sh

env:
  global:
    - CMAKE_OPTIONS=""
    - GTEST_FILTER=-cpplocate_test.getBundlePath_Return:liblocate_test.getBundlePath_Return:utils_test.getEnv_Value

matrix:
  include:

    - os: osx
      osx_image: xcode9.1
      env: CMAKE_CONFIGURATION=release BUILD_DIR=build

    - os: osx
      osx_image: xcode9.1
      env: CMAKE_CONFIGURATION=debug BUILD_DIR=build-debug

    - os: linux
      compiler: clang
      env: CMAKE_CONFIGURATION=release BUILD_DIR=build

    - os: linux
      compiler: clang
      env: CMAKE_CONFIGURATION=debug BUILD_DIR=build-debug

    - os: linux
      compiler: gcc
      env:
        - CMAKE_CONFIGURATION=release BUILD_DIR=build
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - cmake
          - g++-5

    - os: linux
      compiler: gcc
      env:
        - CMAKE_CONFIGURATION=debug BUILD_DIR=build-debug
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - cmake
          - g++-5
    - os: windows
      env:
        - CMAKE_CONFIGURATION=debug BUILD_DIR=build-debug CMAKE_GENERATOR="Visual Studio 15 2017 Win64" PATH="%PATH%;C:\\Program Files\\CMake\\bin\\"
    - os: windows
      env:
        - CMAKE_CONFIGURATION=release BUILD_DIR=build CMAKE_GENERATOR="Visual Studio 15 2017 Win64" PATH="%PATH%;C:\\Program Files\\CMake\\bin\\"

before_script:
  - eval "${MATRIX_EVAL}"
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then export PATH="$PATH;C:/Program Files/CMake/"; fi
  - echo "$PATH"
  - cmake --version
  - chmod +x ./configure
  - ./configure
  - ./configure $CMAKE_CONFIGURATION

script:
  - cmake --build $BUILD_DIR
  - cmake --build $BUILD_DIR --target test
  - cmake --build $BUILD_DIR --target check-all
